{"ast":null,"code":"var _jsxFileName = \"/home/phil/personnal projects/react-player/src/components/Player.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState } from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  _s();\n\n  let {\n    currentSong,\n    isPlaying,\n    setIsPlaying\n  } = _ref;\n  // Ref\n  const audioRef = useRef(null); // Event Handlers\n\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const timeUpdateHandler = e => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({ ...songInfo,\n      currentTime: current,\n      duration\n    });\n  };\n\n  const getTime = time => {}; // State\n\n\n  const [songInfo, setSongInfo] = useState({\n    currentTime: null,\n    duration: null\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: songInfo.currentTime\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"End Time\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"audio\", {\n      onTimeUpdate: timeUpdateHandler,\n      ref: audioRef,\n      src: currentSong.audio\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Player, \"9WgVb+NikB2caj6YSG3VMfm7qq4=\");\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/phil/personnal projects/react-player/src/components/Player.js"],"names":["React","useRef","useState","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","Player","currentSong","isPlaying","setIsPlaying","audioRef","playSongHandler","current","pause","play","timeUpdateHandler","e","target","currentTime","duration","setSongInfo","songInfo","getTime","time","audio"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,MAAf,EAAuBC,QAAvB,QAAsC,OAAtC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SACEC,MADF,EAEEC,WAFF,EAGEC,YAHF,QAIO,mCAJP;;;AAMA,MAAMC,MAAM,GAAG,QAA4C;AAAA;;AAAA,MAA3C;AAACC,IAAAA,WAAD;AAAcC,IAAAA,SAAd;AAAyBC,IAAAA;AAAzB,GAA2C;AAEzD;AACA,QAAMC,QAAQ,GAAGV,MAAM,CAAC,IAAD,CAAvB,CAHyD,CAIzD;;AACA,QAAMW,eAAe,GAAG,MAAM;AAC5B,QAAGH,SAAH,EAAe;AACbE,MAAAA,QAAQ,CAACE,OAAT,CAAiBC,KAAjB;AACAJ,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AACD,KAHD,MAGM;AACJE,MAAAA,QAAQ,CAACE,OAAT,CAAiBE,IAAjB;AACAL,MAAAA,YAAY,CAAC,CAACD,SAAF,CAAZ;AAED;AACF,GATD;;AAUA,QAAMO,iBAAiB,GAAIC,CAAD,IAAO;AAC/B,UAAMJ,OAAO,GAAGI,CAAC,CAACC,MAAF,CAASC,WAAzB;AACA,UAAMC,QAAQ,GAAGH,CAAC,CAACC,MAAF,CAASE,QAA1B;AACAC,IAAAA,WAAW,CAAC,EAAC,GAAGC,QAAJ;AAAcH,MAAAA,WAAW,EAAEN,OAA3B;AAAoCO,MAAAA;AAApC,KAAD,CAAX;AACD,GAJD;;AAKA,QAAMG,OAAO,GAAIC,IAAD,IAAU,CAAE,CAA5B,CApByD,CAqBzD;;;AACC,QAAM,CAACF,QAAD,EAAWD,WAAX,IAA0BnB,QAAQ,CAAC;AACvCiB,IAAAA,WAAW,EAAE,IAD0B;AAEvCC,IAAAA,QAAQ,EAAG;AAF4B,GAAD,CAAxC;AAID,sBACE;AAAK,IAAA,SAAS,EAAC,QAAf;AAAA,4BACE;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE;AAAA,kBAAIE,QAAQ,CAACH;AAAb;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAO,QAAA,IAAI,EAAC;AAAZ;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAME;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACE,QAAC,eAAD;AAAiB,QAAA,SAAS,EAAC,WAA3B;AAAuC,QAAA,IAAI,EAAC,IAA5C;AAAiD,QAAA,IAAI,EAAEd;AAAvD;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,eAAD;AAAiB,QAAA,OAAO,EAAEO,eAA1B;AAA2C,QAAA,SAAS,EAAC,MAArD;AAA4D,QAAA,IAAI,EAAC,IAAjE;AAAsE,QAAA,IAAI,EAAER;AAA5E;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,eAAD;AACE,QAAA,SAAS,EAAC,cADZ;AAEE,QAAA,IAAI,EAAC,IAFP;AAGE,QAAA,IAAI,EAAEE;AAHR;AAAA;AAAA;AAAA;AAAA,cAHF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eAeE;AAAO,MAAA,YAAY,EAAEU,iBAArB;AAAwC,MAAA,GAAG,EAAEL,QAA7C;AAAuD,MAAA,GAAG,EAAEH,WAAW,CAACiB;AAAxE;AAAA;AAAA;AAAA;AAAA,YAfF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CA7CD;;GAAMlB,M;;KAAAA,M;AA+CN,eAAeA,MAAf","sourcesContent":["import React, {useRef, useState} from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({currentSong, isPlaying, setIsPlaying}) => {\n  \n  // Ref\n  const audioRef = useRef(null); \n  // Event Handlers\n  const playSongHandler = () => {\n    if(isPlaying)  {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    }else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n\n    }\n  };\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    setSongInfo({...songInfo, currentTime: current, duration})\n  }\n  const getTime = (time) => {}\n  // State\n   const [songInfo, setSongInfo] = useState({\n     currentTime :null,\n     duration : null,  \n   });\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{songInfo.currentTime}</p>\n        <input type=\"range\" />\n        <p>End Time</p>\n      </div>\n      <div className=\"play-control\">\n        <FontAwesomeIcon className=\"skip-back\" size=\"2x\" icon={faAngleLeft} />\n        <FontAwesomeIcon onClick={playSongHandler} className=\"play\" size=\"2x\" icon={faPlay} />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n        />\n      </div>\n      <audio onTimeUpdate={timeUpdateHandler} ref={audioRef} src={currentSong.audio}></audio>\n    </div>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}