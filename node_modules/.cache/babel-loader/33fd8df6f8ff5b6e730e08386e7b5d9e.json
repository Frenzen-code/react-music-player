{"ast":null,"code":"var _jsxFileName = \"/home/phil/react-music-player/src/components/Player.js\";\nimport React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faPlay, faAngleLeft, faAngleRight, faPause } from \"@fortawesome/free-solid-svg-icons\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Player = _ref => {\n  let {\n    songInfo,\n    setSongInfo,\n    currentSong,\n    isPlaying,\n    setIsPlaying,\n    audioRef,\n    songs,\n    setCurrentSong\n  } = _ref;\n\n  // Event Handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = time => {\n    return Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2);\n  };\n\n  const dragHandler = e => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo,\n      currentTime: e.target.value\n    });\n  };\n\n  const skipTrackHandler = direction => {\n    let currentIndex = songs.findIndex(song => song.id === currentSong.id);\n\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }\n\n    if (direction === \"skip-backward\") {\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"player\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"time-control\",\n      children: [/*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.currentTime)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n        min: 0,\n        max: songInfo.duration || 0,\n        value: songInfo.currentTime,\n        onChange: dragHandler,\n        type: \"range\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: getTime(songInfo.duration)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"play-control\",\n      children: [/*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: () => skipTrackHandler(\"skip-back\"),\n        className: \"skip-back\",\n        size: \"2x\",\n        icon: faAngleLeft\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 7\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        onClick: playSongHandler,\n        className: \"play\",\n        size: \"2x\",\n        icon: isPlaying ? faPause : faPlay\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FontAwesomeIcon, {\n        className: \"skip-forward\",\n        size: \"2x\",\n        icon: faAngleRight,\n        onClick: () => skipTrackHandler(\"skip-forward\")\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Player;\nexport default Player;\n\nvar _c;\n\n$RefreshReg$(_c, \"Player\");","map":{"version":3,"sources":["/home/phil/react-music-player/src/components/Player.js"],"names":["React","FontAwesomeIcon","faPlay","faAngleLeft","faAngleRight","faPause","Player","songInfo","setSongInfo","currentSong","isPlaying","setIsPlaying","audioRef","songs","setCurrentSong","playSongHandler","current","pause","play","getTime","time","Math","floor","slice","dragHandler","e","currentTime","target","value","skipTrackHandler","direction","currentIndex","findIndex","song","id","length","duration"],"mappings":"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","sourcesContent":["import React from \"react\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport {\n  faPlay,\n  faAngleLeft,\n  faAngleRight,\n  faPause,\n} from \"@fortawesome/free-solid-svg-icons\";\n\nconst Player = ({\n  songInfo,\n  setSongInfo,\n  currentSong,\n  isPlaying,\n  setIsPlaying,\n  audioRef,\n  songs,\n  setCurrentSong,\n}) => {\n  // Event Handlers\n  const playSongHandler = () => {\n    if (isPlaying) {\n      audioRef.current.pause();\n      setIsPlaying(!isPlaying);\n    } else {\n      audioRef.current.play();\n      setIsPlaying(!isPlaying);\n    }\n  };\n\n  const getTime = (time) => {\n    return (\n      Math.floor(time / 60) + \":\" + (\"0\" + Math.floor(time % 60)).slice(-2)\n    );\n  };\n  const dragHandler = (e) => {\n    audioRef.current.currentTime = e.target.value;\n    setSongInfo({ ...songInfo, currentTime: e.target.value });\n  };\n\n  const skipTrackHandler = (direction) => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n\n    if (direction === \"skip-forward\") {\n      setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    }  \n    if (direction === \"skip-backward\") {\n      setCurrentSong(songs[(currentIndex - 1) % songs.length]);\n    }\n  };\n\n  return (\n    <div className=\"player\">\n      <div className=\"time-control\">\n        <p>{getTime(songInfo.currentTime)}</p>\n        <input\n          min={0}\n          max={songInfo.duration || 0}\n          value={songInfo.currentTime}\n          onChange={dragHandler}\n          type=\"range\"\n        />\n        <p>{getTime(songInfo.duration)}</p>\n      </div>\n      <div className=\"play-control\">\n      <FontAwesomeIcon\n          onClick={() => skipTrackHandler(\"skip-back\")}\n          className=\"skip-back\"\n          size=\"2x\"\n          icon={faAngleLeft}\n        />\n        <FontAwesomeIcon\n          onClick={playSongHandler}\n          className=\"play\"\n          size=\"2x\"\n          icon={isPlaying ? faPause : faPlay}\n        />\n        <FontAwesomeIcon\n          className=\"skip-forward\"\n          size=\"2x\"\n          icon={faAngleRight}\n          onClick={() => skipTrackHandler(\"skip-forward\")}\n        />\n      </div>\n    </div>\n  );\n};\n\nexport default Player;\n"]},"metadata":{},"sourceType":"module"}