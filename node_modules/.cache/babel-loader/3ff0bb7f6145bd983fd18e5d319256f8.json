{"ast":null,"code":"var _jsxFileName = \"/home/phil/react-music-player/src/components/LibrarySong.js\";\nimport React from \"react\";\nimport { playAudio } from '../util';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst LibrarySong = _ref => {\n  let {\n    song,\n    songs,\n    setCurrentSong,\n    id,\n    audioRef,\n    isPlaying,\n    setSongs\n  } = _ref;\n\n  const songSelectHandler = () => {\n    setCurrentSong(song); // Add active state\n\n    const newSongs = songs.map(song => {\n      if (song.id === id) {\n        return { ...song,\n          active: true\n        };\n      } else {\n        return { ...song,\n          active: false\n        };\n      }\n    });\n    setSongs(newSongs); //check if the song is playing\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    onClick: songSelectHandler,\n    className: `library-song ${song.active ? 'selected' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"img\", {\n      src: song.cover,\n      alt: song.name\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 26,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"song-description\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: song.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"h4\", {\n        children: song.artist\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n\n_c = LibrarySong;\nexport default LibrarySong;\n\nvar _c;\n\n$RefreshReg$(_c, \"LibrarySong\");","map":{"version":3,"sources":["/home/phil/react-music-player/src/components/LibrarySong.js"],"names":["React","playAudio","LibrarySong","song","songs","setCurrentSong","id","audioRef","isPlaying","setSongs","songSelectHandler","newSongs","map","active","cover","name","artist"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAAQC,SAAR,QAAwB,SAAxB;;;AACA,MAAMC,WAAW,GAAG,QAAwE;AAAA,MAAvE;AAAEC,IAAAA,IAAF;AAAQC,IAAAA,KAAR;AAAeC,IAAAA,cAAf;AAA+BC,IAAAA,EAA/B;AAAmCC,IAAAA,QAAnC;AAA6CC,IAAAA,SAA7C;AAAyDC,IAAAA;AAAzD,GAAuE;;AAC1F,QAAMC,iBAAiB,GAAG,MAAM;AAC9BL,IAAAA,cAAc,CAACF,IAAD,CAAd,CAD8B,CAE9B;;AACA,UAAMQ,QAAQ,GAAGP,KAAK,CAACQ,GAAN,CAAWT,IAAD,IAAS;AAClC,UAAGA,IAAI,CAACG,EAAL,KAAYA,EAAf,EAAkB;AAChB,eAAM,EACJ,GAAGH,IADC;AAEJU,UAAAA,MAAM,EAAE;AAFJ,SAAN;AAID,OALD,MAKO;AACL,eAAO,EACL,GAAGV,IADE;AAELU,UAAAA,MAAM,EAAG;AAFJ,SAAP;AAID;AACF,KAZgB,CAAjB;AAaAJ,IAAAA,QAAQ,CAACE,QAAD,CAAR,CAhB8B,CAiB9B;AAED,GAnBD;;AAoBA,sBACE;AAAK,IAAA,OAAO,EAAED,iBAAd;AAAiC,IAAA,SAAS,EAAG,gBAAeP,IAAI,CAACU,MAAL,GAAc,UAAd,GAA2B,EAAG,EAA1F;AAAA,4BACE;AAAK,MAAA,GAAG,EAAEV,IAAI,CAACW,KAAf;AAAsB,MAAA,GAAG,EAAEX,IAAI,CAACY;AAAhC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,kBAAf;AAAA,8BACE;AAAA,kBAAKZ,IAAI,CAACY;AAAV;AAAA;AAAA;AAAA;AAAA,cADF,eAEE;AAAA,kBAAKZ,IAAI,CAACa;AAAV;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AASD,CA9BD;;KAAMd,W;AAgCN,eAAeA,WAAf","sourcesContent":["import React from \"react\";\nimport {playAudio} from '../util'\nconst LibrarySong = ({ song, songs, setCurrentSong, id, audioRef, isPlaying , setSongs}) => {\n  const songSelectHandler = () => {\n    setCurrentSong(song); \n    // Add active state\n    const newSongs = songs.map((song)=> {\n      if(song.id === id){\n        return{\n          ...song,\n          active: true,\n        }\n      } else {\n        return {\n          ...song,\n          active : false, \n        }\n      } \n    })\n    setSongs(newSongs)\n    //check if the song is playing\n  \n  };\n  return (\n    <div onClick={songSelectHandler} className={`library-song ${song.active ? 'selected' : ''}`}>\n      <img src={song.cover} alt={song.name}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}