{"ast":null,"code":"var _jsxFileName = \"/home/phil/react-music-player/src/components/Library.js\";\nimport React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Library = _ref => {\n  let {\n    songs,\n    setCurrentSong,\n    audioRef,\n    isPlaying,\n    setSongs,\n    libraryStatus,\n    setLibraryStatus\n  } = _ref;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: `library ${libraryStatus ? 'active-library' : ''}`,\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"Library\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"library-songs\",\n      children: songs.map(song => /*#__PURE__*/_jsxDEV(LibrarySong, {\n        songs: songs,\n        setCurrentSong: setCurrentSong,\n        song: song,\n        id: song.id,\n        audioRef: audioRef,\n        isPlaying: isPlaying,\n        setSongs: setSongs\n      }, song.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 10,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 8,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 6,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Library;\nexport default Library;\n\nvar _c;\n\n$RefreshReg$(_c, \"Library\");","map":{"version":3,"sources":["/home/phil/react-music-player/src/components/Library.js"],"names":["React","LibrarySong","Library","songs","setCurrentSong","audioRef","isPlaying","setSongs","libraryStatus","setLibraryStatus","map","song","id"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,WAAP,MAAwB,eAAxB;;;AAEA,MAAMC,OAAO,GAAG,QAA8F;AAAA,MAA7F;AAAEC,IAAAA,KAAF;AAASC,IAAAA,cAAT;AAAyBC,IAAAA,QAAzB;AAAmCC,IAAAA,SAAnC;AAA8CC,IAAAA,QAA9C;AAAuDC,IAAAA,aAAvD;AAAsEC,IAAAA;AAAtE,GAA6F;AAC5G,sBACE;AAAK,IAAA,SAAS,EAAG,WAAUD,aAAa,GAAE,gBAAF,GAAoB,EAAG,EAA/D;AAAA,4BACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,eAEE;AAAK,MAAA,SAAS,EAAC,eAAf;AAAA,gBACGL,KAAK,CAACO,GAAN,CAAWC,IAAD,iBACT,QAAC,WAAD;AACE,QAAA,KAAK,EAAER,KADT;AAEE,QAAA,cAAc,EAAEC,cAFlB;AAGE,QAAA,IAAI,EAAEO,IAHR;AAIE,QAAA,EAAE,EAAEA,IAAI,CAACC,EAJX;AAME,QAAA,QAAQ,EAAEP,QANZ;AAOE,QAAA,SAAS,EAAEC,SAPb;AAQE,QAAA,QAAQ,EAAEC;AARZ,SAKOI,IAAI,CAACC,EALZ;AAAA;AAAA;AAAA;AAAA,cADD;AADH;AAAA;AAAA;AAAA;AAAA,YAFF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD,CApBD;;KAAMV,O;AAsBN,eAAeA,OAAf","sourcesContent":["import React from \"react\";\nimport LibrarySong from \"./LibrarySong\";\n\nconst Library = ({ songs, setCurrentSong, audioRef, isPlaying, setSongs,libraryStatus, setLibraryStatus }) => {\n  return (\n    <div className={`library ${libraryStatus? 'active-library': ''}`}>\n      <h2>Library</h2>\n      <div className=\"library-songs\">\n        {songs.map((song) => (\n          <LibrarySong\n            songs={songs}\n            setCurrentSong={setCurrentSong}\n            song={song}\n            id={song.id}\n            key={song.id}\n            audioRef={audioRef}\n            isPlaying={isPlaying}\n            setSongs={setSongs}\n          />\n        ))}\n      </div>\n    </div>\n  );\n};\n\nexport default Library;\n"]},"metadata":{},"sourceType":"module"}