{"ast":null,"code":"import _objectSpread from\"/home/phil/react-music-player/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _asyncToGenerator from\"/home/phil/react-music-player/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _regeneratorRuntime from\"/home/phil/react-music-player/node_modules/@babel/runtime/regenerator/index.js\";import React from\"react\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";var LibrarySong=function LibrarySong(_ref){var song=_ref.song,songs=_ref.songs,setCurrentSong=_ref.setCurrentSong,id=_ref.id,audioRef=_ref.audioRef,isPlaying=_ref.isPlaying,setSongs=_ref.setSongs;var songSelectHandler=/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var newSongs;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return setCurrentSong(song);case 2:// Add active state\nnewSongs=songs.map(function(song){if(song.id===id){return _objectSpread(_objectSpread({},song),{},{active:true});}else{return _objectSpread(_objectSpread({},song),{},{active:false});}});setSongs(newSongs);//check if the song is playing\nif(isPlaying)audioRef.current.play();case 5:case\"end\":return _context.stop();}}},_callee);}));return function songSelectHandler(){return _ref2.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{onClick:songSelectHandler,className:\"library-song \".concat(song.active?\"selected\":\"\"),children:[/*#__PURE__*/_jsx(\"img\",{src:song.cover,alt:song.name}),/*#__PURE__*/_jsxs(\"div\",{className:\"song-description\",children:[/*#__PURE__*/_jsx(\"h3\",{children:song.name}),/*#__PURE__*/_jsx(\"h4\",{children:song.artist})]})]});};export default LibrarySong;","map":{"version":3,"sources":["/home/phil/react-music-player/src/components/LibrarySong.js"],"names":["React","LibrarySong","song","songs","setCurrentSong","id","audioRef","isPlaying","setSongs","songSelectHandler","newSongs","map","active","current","play","cover","name","artist"],"mappings":"2VAAA,MAAOA,CAAAA,KAAP,KAAkB,OAAlB,C,wFAGA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,MAQd,IAPJC,CAAAA,IAOI,MAPJA,IAOI,CANJC,KAMI,MANJA,KAMI,CALJC,cAKI,MALJA,cAKI,CAJJC,EAII,MAJJA,EAII,CAHJC,QAGI,MAHJA,QAGI,CAFJC,SAEI,MAFJA,SAEI,CADJC,QACI,MADJA,QACI,CACJ,GAAMC,CAAAA,iBAAiB,2FAAG,sKACnBL,CAAAA,cAAc,CAACF,IAAD,CADK,QAExB;AACMQ,QAHkB,CAGPP,KAAK,CAACQ,GAAN,CAAU,SAACT,IAAD,CAAU,CACnC,GAAIA,IAAI,CAACG,EAAL,GAAYA,EAAhB,CAAoB,CAClB,sCACKH,IADL,MAEEU,MAAM,CAAE,IAFV,GAID,CALD,IAKO,CACL,sCACKV,IADL,MAEEU,MAAM,CAAE,KAFV,GAID,CACF,CAZgB,CAHO,CAgBxBJ,QAAQ,CAACE,QAAD,CAAR,CACA;AACA,GAAGH,SAAH,CAAcD,QAAQ,CAACO,OAAT,CAAiBC,IAAjB,GAlBU,sDAAH,kBAAjBL,CAAAA,iBAAiB,2CAAvB,CAoBA,mBACE,aACE,OAAO,CAAEA,iBADX,CAEE,SAAS,wBAAkBP,IAAI,CAACU,MAAL,CAAc,UAAd,CAA2B,EAA7C,CAFX,wBAIE,YAAK,GAAG,CAAEV,IAAI,CAACa,KAAf,CAAsB,GAAG,CAAEb,IAAI,CAACc,IAAhC,EAJF,cAKE,aAAK,SAAS,CAAC,kBAAf,wBACE,oBAAKd,IAAI,CAACc,IAAV,EADF,cAEE,oBAAKd,IAAI,CAACe,MAAV,EAFF,GALF,GADF,CAYD,CAzCD,CA2CA,cAAehB,CAAAA,WAAf","sourcesContent":["import React from \"react\";\n\n\nconst LibrarySong = ({\n  song,\n  songs,\n  setCurrentSong,\n  id,\n  audioRef,\n  isPlaying,\n  setSongs,\n}) => {\n  const songSelectHandler = async () => {\n  await  setCurrentSong(song);\n    // Add active state\n    const newSongs = songs.map((song) => {\n      if (song.id === id) {\n        return {\n          ...song,\n          active: true,\n        };\n      } else {\n        return {\n          ...song,\n          active: false,\n        };\n      }\n    });\n    setSongs(newSongs);\n    //check if the song is playing\n    if(isPlaying) audioRef.current.play();\n  };\n  return (\n    <div\n      onClick={songSelectHandler}\n      className={`library-song ${song.active ? \"selected\" : \"\"}`}\n    >\n      <img src={song.cover} alt={song.name}></img>\n      <div className=\"song-description\">\n        <h3>{song.name}</h3>\n        <h4>{song.artist}</h4>\n      </div>\n    </div>\n  );\n};\n\nexport default LibrarySong;\n"]},"metadata":{},"sourceType":"module"}