{"ast":null,"code":"import _asyncToGenerator from\"/home/phil/react-music-player/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";import _objectSpread from\"/home/phil/react-music-player/node_modules/@babel/runtime/helpers/esm/objectSpread2.js\";import _slicedToArray from\"/home/phil/react-music-player/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";import _regeneratorRuntime from\"/home/phil/react-music-player/node_modules/@babel/runtime/regenerator/index.js\";import React,{useState,useRef}from\"react\";//Import Styles\nimport\"./styles/app.scss\";//Adding Components\nimport Player from\"./components/Player\";import Song from\"./components/Song\";import Library from\"./components/Library\";import Nav from\"./components/Nav\";//Import Util\nimport data from\"./data\";import{jsx as _jsx}from\"react/jsx-runtime\";import{jsxs as _jsxs}from\"react/jsx-runtime\";function App(){// Ref\nvar audioRef=useRef(null);//State\nvar _useState=useState(data()),_useState2=_slicedToArray(_useState,2),songs=_useState2[0],setSongs=_useState2[1];var _useState3=useState(songs[0]),_useState4=_slicedToArray(_useState3,2),currentSong=_useState4[0],setCurrentSong=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),isPlaying=_useState6[0],setIsPlaying=_useState6[1];var _useState7=useState({currentTime:0,duration:0,animationPercentage:0}),_useState8=_slicedToArray(_useState7,2),songInfo=_useState8[0],setSongInfo=_useState8[1];var _useState9=useState(false),_useState10=_slicedToArray(_useState9,2),libraryStatus=_useState10[0],setLibraryStatus=_useState10[1];// Event handler\nvar timeUpdateHandler=function timeUpdateHandler(e){var current=e.target.currentTime;var duration=e.target.duration;// calculate percentage\nvar roundedCurrent=Math.round(current);var roundedDuration=Math.round(duration);var animation=Math.round(roundedCurrent/roundedDuration*100);setSongInfo(_objectSpread(_objectSpread({},songInfo),{},{currentTime:current,duration:duration,animationPercentage:animation}));};var songEndedHandler=/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(){var currentIndex;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:currentIndex=songs.findIndex(function(song){return song.id===currentSong.id;});_context.next=3;return setCurrentSong(songs[(currentIndex+1)%songs.length]);case 3:if(isPlaying)audioRef.current.play();case 4:case\"end\":return _context.stop();}}},_callee);}));return function songEndedHandler(){return _ref.apply(this,arguments);};}();return/*#__PURE__*/_jsxs(\"div\",{className:\"App \".concat(libraryStatus?'library-active':''),children:[/*#__PURE__*/_jsx(Nav,{libraryStatus:libraryStatus,setLibraryStatus:setLibraryStatus}),/*#__PURE__*/_jsx(Song,{currentSong:currentSong}),/*#__PURE__*/_jsx(Player,{audioRef:audioRef,isPlaying:isPlaying,setIsPlaying:setIsPlaying,currentSong:currentSong,setSongInfo:setSongInfo,songInfo:songInfo,songs:songs,setCurrentSong:setCurrentSong,setSongs:setSongs}),/*#__PURE__*/_jsx(Library,{audioRef:audioRef,songs:songs,setCurrentSong:setCurrentSong,isPlaying:isPlaying,setSongs:setSongs,libraryStatus:libraryStatus,setLibraryStatus:setLibraryStatus}),/*#__PURE__*/_jsx(\"audio\",{onTimeUpdate:timeUpdateHandler,onLoadedMetadata:timeUpdateHandler,ref:audioRef,src:currentSong.audio,onEnded:songEndedHandler})]});}export default App;","map":{"version":3,"sources":["/home/phil/react-music-player/src/App.js"],"names":["React","useState","useRef","Player","Song","Library","Nav","data","App","audioRef","songs","setSongs","currentSong","setCurrentSong","isPlaying","setIsPlaying","currentTime","duration","animationPercentage","songInfo","setSongInfo","libraryStatus","setLibraryStatus","timeUpdateHandler","e","current","target","roundedCurrent","Math","round","roundedDuration","animation","songEndedHandler","currentIndex","findIndex","song","id","length","play","audio"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\n//Import Styles\nimport \"./styles/app.scss\";\n//Adding Components\nimport Player from \"./components/Player\";\nimport Song from \"./components/Song\";\nimport Library from \"./components/Library\";\nimport Nav from \"./components/Nav\";\n//Import Util\nimport data from \"./data\";\n\nfunction App() {\n  // Ref\n  const audioRef = useRef(null);\n  //State\n  const [songs, setSongs] = useState(data());\n  const [currentSong, setCurrentSong] = useState(songs[0]);\n  const [isPlaying, setIsPlaying] = useState(false);\n  const [songInfo, setSongInfo] = useState({\n    currentTime: 0,\n    duration: 0,\n    animationPercentage: 0,\n  });\n  const [libraryStatus, setLibraryStatus] = useState(false);\n  // Event handler\n  const timeUpdateHandler = (e) => {\n    const current = e.target.currentTime;\n    const duration = e.target.duration;\n    // calculate percentage\n    const roundedCurrent = Math.round(current)\n    const roundedDuration = Math.round(duration)\n    const animation= Math.round((roundedCurrent / roundedDuration) *100)\n\n    setSongInfo({ ...songInfo, currentTime: current, duration, animationPercentage:animation });\n  };\n  const songEndedHandler = async () => {\n    let currentIndex = songs.findIndex((song) => song.id === currentSong.id);\n    await setCurrentSong(songs[(currentIndex + 1) % songs.length]);\n    if(isPlaying) audioRef.current.play()\n     \n  }\n  return (\n    <div className={`App ${libraryStatus ? 'library-active': ''}`}>\n      <Nav libraryStatus={libraryStatus} setLibraryStatus={setLibraryStatus} />\n      <Song currentSong={currentSong} />\n      <Player\n        audioRef={audioRef}\n        isPlaying={isPlaying}\n        setIsPlaying={setIsPlaying}\n        currentSong={currentSong}\n        setSongInfo={setSongInfo}\n        songInfo={songInfo}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        setSongs={setSongs}\n      />\n      <Library\n        audioRef={audioRef}\n        songs={songs}\n        setCurrentSong={setCurrentSong}\n        isPlaying={isPlaying}\n        setSongs={setSongs}\n        libraryStatus={libraryStatus}\n        setLibraryStatus={setLibraryStatus}\n      />\n      <audio\n        onTimeUpdate={timeUpdateHandler}\n        onLoadedMetadata={timeUpdateHandler}\n        ref={audioRef}\n        src={currentSong.audio}\n        onEnded={songEndedHandler}\n      ></audio>\n    </div>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}